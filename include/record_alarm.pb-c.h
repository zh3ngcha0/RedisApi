/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: record_alarm.proto */

#ifndef PROTOBUF_C_record_5falarm_2eproto__INCLUDED
#define PROTOBUF_C_record_5falarm_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _AlarmIndex AlarmIndex;
typedef struct _AlarmLevel AlarmLevel;
typedef struct _AlarmText AlarmText;


/* --- enums --- */


/* --- messages --- */

struct  _AlarmIndex
{
  ProtobufCMessage base;
  uint32_t alarm_index;
};
#define ALARM_INDEX__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&alarm_index__descriptor) \
    , 0 }


struct  _AlarmLevel
{
  ProtobufCMessage base;
  uint32_t alarm_level;
};
#define ALARM_LEVEL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&alarm_level__descriptor) \
    , 0 }


struct  _AlarmText
{
  ProtobufCMessage base;
  char *alarm_text;
  protobuf_c_boolean has_log_module;
  uint32_t log_module;
};
#define ALARM_TEXT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&alarm_text__descriptor) \
    , NULL, 0,0 }


/* AlarmIndex methods */
void   alarm_index__init
                     (AlarmIndex         *message);
size_t alarm_index__get_packed_size
                     (const AlarmIndex   *message);
size_t alarm_index__pack
                     (const AlarmIndex   *message,
                      uint8_t             *out);
size_t alarm_index__pack_to_buffer
                     (const AlarmIndex   *message,
                      ProtobufCBuffer     *buffer);
AlarmIndex *
       alarm_index__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   alarm_index__free_unpacked
                     (AlarmIndex *message,
                      ProtobufCAllocator *allocator);
/* AlarmLevel methods */
void   alarm_level__init
                     (AlarmLevel         *message);
size_t alarm_level__get_packed_size
                     (const AlarmLevel   *message);
size_t alarm_level__pack
                     (const AlarmLevel   *message,
                      uint8_t             *out);
size_t alarm_level__pack_to_buffer
                     (const AlarmLevel   *message,
                      ProtobufCBuffer     *buffer);
AlarmLevel *
       alarm_level__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   alarm_level__free_unpacked
                     (AlarmLevel *message,
                      ProtobufCAllocator *allocator);
/* AlarmText methods */
void   alarm_text__init
                     (AlarmText         *message);
size_t alarm_text__get_packed_size
                     (const AlarmText   *message);
size_t alarm_text__pack
                     (const AlarmText   *message,
                      uint8_t             *out);
size_t alarm_text__pack_to_buffer
                     (const AlarmText   *message,
                      ProtobufCBuffer     *buffer);
AlarmText *
       alarm_text__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   alarm_text__free_unpacked
                     (AlarmText *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*AlarmIndex_Closure)
                 (const AlarmIndex *message,
                  void *closure_data);
typedef void (*AlarmLevel_Closure)
                 (const AlarmLevel *message,
                  void *closure_data);
typedef void (*AlarmText_Closure)
                 (const AlarmText *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor alarm_index__descriptor;
extern const ProtobufCMessageDescriptor alarm_level__descriptor;
extern const ProtobufCMessageDescriptor alarm_text__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_record_5falarm_2eproto__INCLUDED */
